name: Test Windows Signing and Installer

on:
  workflow_dispatch:  # This allows manual triggering

jobs:
  test-signing:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Extract version for testing
      id: get_version
      run: |
        $VERSION = "0.0.1-test"  # Use a fixed version for testing
        echo "VERSION=$VERSION" >> $env:GITHUB_OUTPUT
        echo "Version for testing: $VERSION"
      shell: pwsh

    - name: Create dummy executable
      run: |
        New-Item -ItemType Directory -Path "target\release" -Force
        echo "This is a dummy executable for testing signing process" > "target\release\node-gui.exe"
      shell: pwsh

    - name: Install SignTool
      run: choco install windows-sdk-10-version-2004-all

    - name: Prepare Certificate
      run: |
        echo "${{ secrets.WINDOWS_DER_CERT }}" | base64 --decode > certificate.der
      shell: bash

    - name: Sign Dummy Executable
      run: |
        & "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe" sign /f certificate.der /tr http://timestamp.digicert.com /td sha256 /fd sha256 "target\release\node-gui.exe"
      shell: pwsh

    - name: Package Dummy Mintlayer Node GUI
      run: |
        $VERSION = "${{ steps.get_version.outputs.VERSION }}"
        $DEST = "Mintlayer_Node_GUI_${VERSION}_win64"
        New-Item -ItemType Directory -Path $DEST
        Copy-Item "target\release\node-gui.exe" -Destination $DEST
        Compress-Archive -Path $DEST -DestinationPath "${DEST}.zip"
      shell: pwsh

    - name: Install NSIS
      run: |
        choco install nsis -y
        echo "C:\Program Files (x86)\NSIS" >> $GITHUB_PATH
      shell: pwsh

    - name: Create NSIS Installer Script
      run: |
        $VERSION = "${{ steps.get_version.outputs.VERSION }}"
        $NSIS_SCRIPT = @"
        !include "MUI2.nsh"
        Name "Mintlayer Node GUI (Test)"
        OutFile "Mintlayer_Node_GUI_${VERSION}_Setup.exe"
        InstallDir "$PROGRAMFILES64\Mintlayer Node GUI Test"
        !insertmacro MUI_PAGE_DIRECTORY
        !insertmacro MUI_PAGE_INSTFILES
        !insertmacro MUI_LANGUAGE "English"
        Section "Install"
          SetOutPath "$INSTDIR"
          File "target\release\node-gui.exe"
          CreateShortCut "$DESKTOP\Mintlayer Node GUI Test.lnk" "$INSTDIR\node-gui.exe"
          WriteUninstaller "$INSTDIR\uninstall.exe"
        SectionEnd
        Section "Uninstall"
          Delete "$INSTDIR\node-gui.exe"
          Delete "$INSTDIR\uninstall.exe"
          Delete "$DESKTOP\Mintlayer Node GUI Test.lnk"
          RMDir "$INSTDIR"
        SectionEnd
        "@
        $NSIS_SCRIPT | Out-File -FilePath "installer.nsi" -Encoding utf8
      shell: pwsh

    - name: Build NSIS Installer
      run: makensis installer.nsi

    - name: Sign Installer
      run: |
        & "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe" sign /f certificate.der /tr http://timestamp.digicert.com /td sha256 /fd sha256 "Mintlayer_Node_GUI_${{ steps.get_version.outputs.VERSION }}_Setup.exe"
      shell: pwsh

    - name: Upload Test Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Test_Artifacts
        path: |
          Mintlayer_Node_GUI_${{ steps.get_version.outputs.VERSION }}_win64.zip
          Mintlayer_Node_GUI_${{ steps.get_version.outputs.VERSION }}_Setup.exe

    - name: Clean up Certificate Files
      if: always()
      run: |
        Remove-Item -ErrorAction Ignore certificate.der