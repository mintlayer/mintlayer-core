name: Build Windows

on:
  workflow_call:
    inputs:
      binary_list:
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Extract version from tag
      id: get_version
      run: |
        $VERSION = $env:GITHUB_REF -replace 'refs/tags/', '' -replace '^v', ''
        echo "VERSION=$VERSION" >> $env:GITHUB_OUTPUT
        echo "Version extracted: $VERSION"
      shell: pwsh

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Build Mintlayer Node GUI
      run: |
        New-Item -ItemType Directory -Force -Path "target\release"
        Invoke-WebRequest -Uri "https://docs.mintlayer.org/dogecoind.exe" -OutFile "target\release\node-gui.exe"
      shell: pwsh

    - name: Package Mintlayer Node GUI
      run: |
        $VERSION = "${{ steps.get_version.outputs.VERSION }}"
        $DEST = "Mintlayer_Node_GUI_${VERSION}_win64"
        New-Item -ItemType Directory -Path $DEST
        Copy-Item "target\release\node-gui.exe" -Destination $DEST
        Compress-Archive -Path $DEST -DestinationPath "${DEST}.zip"
      shell: pwsh

    - name: Upload GUI ZIP Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Mintlayer_Node_GUI_${{ steps.get_version.outputs.VERSION }}_win64_zip
        path: Mintlayer_Node_GUI_${{ steps.get_version.outputs.VERSION }}_win64.zip

    - name: Install NSIS
      run: |
        choco install nsis -y
        echo "C:\Program Files (x86)\NSIS" >> $env:GITHUB_PATH
      shell: pwsh

    - name: Create NSIS Installer Script
      run: |
        $VERSION = "${{ steps.get_version.outputs.VERSION }}"
        $NSIS_SCRIPT = @"
        !include "MUI2.nsh"
        Name "Mintlayer Node GUI"
        OutFile "Mintlayer_Node_GUI_${VERSION}_Setup.exe"
        InstallDir "$PROGRAMFILES64\Mintlayer Node GUI"
        !insertmacro MUI_PAGE_DIRECTORY
        !insertmacro MUI_PAGE_INSTFILES
        !insertmacro MUI_LANGUAGE "English"
        Section "Install"
          SetOutPath "$INSTDIR"
          File "target\release\node-gui.exe"
          CreateShortCut "$DESKTOP\Mintlayer Node GUI.lnk" "$INSTDIR\node-gui.exe"
          WriteUninstaller "$INSTDIR\uninstall.exe"
        SectionEnd
        Section "Uninstall"
          Delete "$INSTDIR\node-gui.exe"
          Delete "$INSTDIR\uninstall.exe"
          Delete "$DESKTOP\Mintlayer Node GUI.lnk"
          RMDir "$INSTDIR"
        SectionEnd
        "@
        $NSIS_SCRIPT | Out-File -FilePath "installer.nsi" -Encoding utf8
      shell: pwsh

    - name: Build NSIS Installer
      run: makensis installer.nsi

    - name: Upload NSIS Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Mintlayer_Node_GUI_${{ steps.get_version.outputs.VERSION }}_Setup
        path: Mintlayer_Node_GUI_${{ steps.get_version.outputs.VERSION }}_Setup.exe