name: macOS Build, Sign, and Notarize

on:
  push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ matrix.arch }}-apple-darwin

    - name: Build Binary
      run: |
        cargo build --release --bin node-gui --target ${{ matrix.arch }}-apple-darwin

    - name: Upload DMG Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-${{ matrix.arch }}-dmg-${{ github.run_id }}
        path: Mintlayer_Node_GUI_${{ matrix.arch }}.dmg
    - name: Build, Sign, and Notarize
      env:
        MACOS_CERTIFICATE_BASE64: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        MACOS_CERTIFICATE_NAME: ${{ secrets.MACOS_CERTIFICATE_NAME }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      run: |
        ./build-tools/osx/build_and_sign.sh ${{ matrix.arch }}
  create-release:
    needs: build-macos
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
    - name: Download DMG Artifacts
      uses: actions/download-artifact@v4
      with:
        path: dmg-artifacts
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dmg-artifacts/**/*.dmg"
        token: ${{ secrets.GITHUB_TOKEN }}