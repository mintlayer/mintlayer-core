[package]
name = "mempool"
license.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
accounting = { path = "../accounting" }
chainstate = { path = "../chainstate" }
chainstate-types = { path = "../chainstate/types" }
common = { path = "../common" }
crypto = { path = "../crypto" }
logging = { path = "../logging" }
mempool-types = { path = "types" }
mintscript = { path = "../mintscript" }
orders-accounting = { path = "../orders-accounting" }
p2p-types = { path = "../p2p/types" }
pos-accounting = { path = "../pos-accounting" }
rpc = { path = "../rpc" }
randomness = { path = "../randomness" }
rpc-description = { path = "../rpc/description" }
serialization = { path = "../serialization" }
subsystem = { path = "../subsystem" }
tokens-accounting = { path = "../tokens-accounting" }
utils = { path = "../utils" }
utils-networking = {path = '../utils/networking'}
utxo = { path = "../utxo" }

anyhow.workspace = true
async-trait.workspace = true
byte-unit.workspace = true
hex.workspace = true
jsonrpsee = { workspace = true, features = ["macros"] }
parking_lot.workspace = true
serde.workspace = true
static_assertions.workspace = true
thiserror.workspace = true
tokio = { workspace = true, default-features = false, features = ["io-util", "macros", "net", "rt", "rt-multi-thread", "sync", "time"] }
num-traits.workspace = true
tracing.workspace = true

[dev-dependencies]
chainstate-storage = { path = "../chainstate/storage" }
chainstate-test-framework = { path = "../chainstate/test-framework" }
crypto = { path = "../crypto" }
test-utils = { path = "../test-utils" }

mockall.workspace = true
rstest.workspace = true
