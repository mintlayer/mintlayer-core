[package]
name = "common"
license.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
crypto = { path = "../crypto" }
logging = { path = "../logging/" }
randomness = { path = "../randomness" }
rpc-description = { path = "../rpc/description" }
rpc-types = { path = "../rpc/types" }
script = { path = "../script" }
serialization = { path = "../serialization" }
typename = { path = "../utils/typename" }
utils = { path = "../utils" }

anyhow.workspace = true
bech32.workspace = true
chrono = { workspace = true }
clap = { workspace = true, features = ["derive"] }
fixed-hash.workspace = true
generic-array.workspace = true
hex.workspace = true
itertools.workspace = true
lazy_static.workspace = true
merkletree-mintlayer = { workspace = true, features = ["scale-codec"] }
num.workspace = true
once_cell.workspace = true
parity-scale-codec.workspace = true
paste.workspace = true
ref-cast.workspace = true
regex.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_with.workspace = true
static_assertions.workspace = true
strum.workspace = true
thiserror.workspace = true

[dev-dependencies]
test-utils = { path = "../test-utils" }

bitcoin-bech32.workspace = true
expect-test.workspace = true
indoc.workspace = true
proptest.workspace = true
rstest.workspace = true
serde_test.workspace = true
serial_test.workspace = true

[features]
expensive-verification = []

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(kani)'] }
