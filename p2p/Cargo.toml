[package]
name = "p2p"
license.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[features]
default = []

[dependencies]
p2p-types = { path = "types" }

chainstate = { path = "../chainstate/" }
common = { path = "../common/" }
crypto = { path = "../crypto/" }
logging = { path = "../logging/" }
mempool = { path = "../mempool/" }
rpc = { path = "../rpc/" }
serialization = { path = "../serialization/" }
storage = { path = "../storage" }
subsystem = { path = "../subsystem/" }
utils = { path = "../utils/" }

async-trait.workspace = true
bytes.workspace = true
enum-iterator.workspace = true
futures.workspace = true
hex.workspace = true
itertools.workspace = true
jsonrpsee = { workspace = true, features = ["macros"] }
num-derive.workspace = true
num-traits.workspace = true
once_cell.workspace = true
parity-scale-codec.workspace = true
serde.workspace = true
siphasher.workspace = true
snowstorm.workspace = true
socket2 = { workspace = true, features = ["all"] }
sscanf.workspace = true
tap.workspace = true
thiserror.workspace = true
tokio = { workspace = true, default-features = false, features = ["io-util", "macros", "net", "rt", "rt-multi-thread", "sync", "time"] }
tokio-stream.workspace = true
tokio-socks.workspace = true
tokio-util = { workspace = true, default-features = false, features = ["codec"] }
tracing.workspace = true
tracing-subscriber.workspace = true

[dev-dependencies]
chainstate-storage = { path = "../chainstate/storage" }
chainstate-test-framework = { path = "../chainstate/test-framework" }
consensus = { path = "../consensus" }
crypto = { path = "../crypto/" }
p2p-backend-test-suite = { path = "backend-test-suite" }
p2p-test-utils = { path = "p2p-test-utils" }
storage-inmemory = { path = "../storage/inmemory" }
test-utils = { path = "../test-utils" }

criterion.workspace = true
ctor.workspace = true
portpicker.workspace = true
rstest.workspace = true

[[test]]
name = "backend_tcp"
harness = false

[[test]]
name = "backend_channels"
harness = false

[[test]]
name = "backend_noise"
harness = false

[[bench]]
name = "benches"
harness = false
