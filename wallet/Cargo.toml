[package]
name = "wallet"
license.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
chainstate = { path = "../chainstate" }
common = { path = "../common" }
consensus = { path = "../consensus" }
crypto = { path = "../crypto/" }
logging = { path = "../logging" }
mempool = { path = "../mempool" }
orders-accounting = { path = "../orders-accounting" }
pos-accounting = { path = "../pos-accounting" }
randomness = { path = "../randomness" }
rpc-description = { path = "../rpc/description" }
serialization = { path = "../serialization" }
storage = { path = "../storage" }
tx-verifier = { path = "../chainstate/tx-verifier" }
utils = { path = "../utils" }
utils-networking = { path = "../utils/networking" }
utxo = { path = "../utxo" }
wallet-storage = { path = "./storage" }
wallet-types = { path = "./types" }

bip39 = { workspace = true, default-features = false, features = [
  "std",
  "zeroize",
] }
hex.workspace = true
itertools.workspace = true
parity-scale-codec.workspace = true
serde.workspace = true
thiserror.workspace = true
trezor-client = { workspace = true, optional = true }
zeroize.workspace = true

[dev-dependencies]
chainstate-test-framework = { path = "../chainstate/test-framework" }
test-utils = { path = "../test-utils" }

ctor.workspace = true
lazy_static.workspace = true
rstest.workspace = true
serde_json.workspace = true
serial_test.workspace = true
tempfile.workspace = true

[features]
trezor = ["dep:trezor-client", "wallet-types/trezor"]
enable-trezor-device-tests = []
# Note: currently this is used in certain external tests (in particular, in the bridge), so we only
# allow it for regtest. TODO: it's better to have some regtest-specific options for the wallet,
# similar to what we have for the node.
use-deterministic-signatures-in-software-signer-for-regtest = []
default = ["trezor"]
